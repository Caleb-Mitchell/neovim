{
  "PEDAC": {
    "prefix": "ped",
    "description": "Display pedac template",
    "body": [
      "=begin\n",
      "== Problem ==",
      "- $1\n",
      "Input: $2",
      "Output: $3\n",
      "Rules/Requirements",
      "- $4\n",
      "Mental Model",
      "- $5\n",
      "== Examples/Test Cases ==",
      "$6\n",
      "== Data Structure(s) ==",
      "- $7\n",
      "== Algorithm ==\n",
      "$8\n",
      "== Code (with intent) ==",
      "=end",
      "$9"
    ]
  },
  "html-caleb": {
    "prefix": "html-caleb",
    "body": [
      "<!DOCTYPE html>",
      "<html lang=\"$1en\">",
      "\t<head>",
      "\t\t<title>$2</title>",
      "\t\t<meta charset=\"UTF-8\">",
      "\t\t<!-- comment this out if site is not designed to be responsive -->",
      "\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
      "\t\t<link href=\"css/style.css\" rel=\"stylesheet\">",
      "\t</head>",
      "\t<body>",
      "\t$4",
      "\t</body>",
      "</html>"
    ],
    "description": "HTML - My WiP html boilterplate",
    "scope": "text.html"
  },
  "css-reset-caleb": {
    "prefix": "css-reset-caleb",
    "body": [
      "/* Border Box Reset */",
      "",
      "html {",
      "\tbox-sizing: border-box;",
      "}",
      "",
      "*, *::before, *::after {",
      "\tbox-sizing: inherit;",
      "}",
      "",
      "/*",
      "----------------------------------------",
      "Tantek Celik's Whitespace Reset",
      "Author:    Tantek Celik, Shane Riley",
      "Version:    (CC) 2010 Some Rights Reserved - http://creativecommons.org/licenses/by/2.0",
      "Description:  Resets default styling of browsers to a common base",
      "**Custom Version Used by Launch School**",
      "----------------------------------------",
      "*/",
      "",
      "ul, ol { list-style: none; }",
      "h1, h2, h3, h4, h5, h6, pre, code { font-size: 1em; }",
      "ul, ol, li, h1, h2, h3, h4, h5, h6, pre, form, body, html, p, blockquote,",
      "fieldset, input, dl, dt, dd, figure, figcaption {",
      "\t\tmargin: 0;",
      "\t\tpadding: 0;",
      "}",
      "a img, :link img, :visited img, fieldset { border: none; }",
      "address { font-style: normal; }",
      "header, section, article, nav, footer, hgroup, details, summary, figure, main {",
      "\t\tdisplay: block;",
      "}",
      "mark {",
      "\t\tcolor: inherit;",
      "\t\tbackground-color: transparent;",
      "}",
      "abbr { border: none; }",
      "summary::-webkit-details-marker { display: none; }"
    ],
    "description": "CSS - My WiP css reset boilerplate",
    "scope": "text.css"
  },
  "state-list-select-ele": {
    "prefix": "state-list-select-ele",
    "body": [
      "<select name='state'>",
      "\t<option>AK</option>",
      "\t<option>AL</option>",
      "\t<option>AR</option>",
      "\t<option>AZ</option>",
      "\t<option>CA</option>",
      "\t<option>CO</option>",
      "\t<option>CT</option>",
      "\t<option>DC</option>",
      "\t<option>DE</option>",
      "\t<option>FL</option>",
      "\t<option>GA</option>",
      "\t<option>HI</option>",
      "\t<option>IA</option>",
      "\t<option>ID</option>",
      "\t<option>IL</option>",
      "\t<option>IN</option>",
      "\t<option>KS</option>",
      "\t<option>KY</option>",
      "\t<option>LA</option>",
      "\t<option>MA</option>",
      "\t<option>MD</option>",
      "\t<option>ME</option>",
      "\t<option>MI</option>",
      "\t<option>MN</option>",
      "\t<option>MO</option>",
      "\t<option>MS</option>",
      "\t<option>MT</option>",
      "\t<option>NC</option>",
      "\t<option>ND</option>",
      "\t<option>NE</option>",
      "\t<option>NH</option>",
      "\t<option>NJ</option>",
      "\t<option>NM</option>",
      "\t<option>NV</option>",
      "\t<option>NY</option>",
      "\t<option>OH</option>",
      "\t<option>OK</option>",
      "\t<option>OR</option>",
      "\t<option>PA</option>",
      "\t<option>RI</option>",
      "\t<option>SC</option>",
      "\t<option>SD</option>",
      "\t<option>TN</option>",
      "\t<option>TX</option>",
      "\t<option>UT</option>",
      "\t<option>VA</option>",
      "\t<option>VT</option>",
      "\t<option>WA</option>",
      "\t<option>WI</option>",
      "\t<option>WV</option>",
      "\t<option>WY</option>",
      "</select>"
    ],
    "description": "CSS - My WiP css reset boilerplate",
    "scope": "text.css"
  },
  "rubocop-LS": {
    "prefix": "rubocop-LS",
    "body": [
      "# .rubocopyml for non-RB101 courses (17 Mar 2021)",
      "",
      "AllCops:",
      "\t# Display cop names",
      "\tDisplayCopNames: true",
      "\t# Display Extra details",
      "\tExtraDetails: true",
      "\t# Style guide URLs are not displayed in offense messages by default. Change",
      "\t# behavior by overriding DisplayStyleGuide, or by giving the",
      "\t# -S/--display-style-guide option.",
      "\tDisplayStyleGuide: true",
      "\t# When specifying style guide URLs, any paths and/or fragments will be",
      "\t# evaluated relative to the base URL.",
      "\tStyleGuideBaseURL: https://rubystyle.guide/",
      "\t# What version of the Ruby interpreter is the inspected code intended to",
      "\t# run on? (If there is more than one, set this to the lowest version.)",
      "\tTargetRubyVersion: 2.4",
      "",
      "Style/BlockComments:",
      "\tDescription: 'Do not use block comments.'",
      "\tEnabled: false",
      "",
      "Style/ClassVars:",
      "\tDescription: 'Checks for uses of class variables.'",
      "\tEnabled: false",
      "",
      "Style/CommandLiteral:",
      "\tDescription: 'Use `` or %x around command literals.'",
      "\tEnabled: true",
      "\t# backticks: Always use backticks.",
      "\t# percent_x: Always use %x.",
      "\t# mixed: Use backticks on single-line commands, and %x on multi-line commands.",
      "\tEnforcedStyle: mixed",
      "\tSupportedStyles:",
      "\t\t- backticks",
      "\t\t- percent_x",
      "\t\t- mixed",
      "\t# If false, the cop will always recommend using %x if one or more backticks",
      "\t# are found in the command string.",
      "\tAllowInnerBackticks: false",
      "",
      "Style/CommentAnnotation:",
      "\tDescription: >-",
      "\t\tChecks formatting of special comments (TODO, FIXME, OPTIMIZE, HACK, REVIEW).",
      "\tEnabled: false",
      "",
      "\tStyle/Documentation:",
      "\t\tDescription: 'Document classes and non-namespace modules.'",
      "\t\tEnabled: false",
      "",
      "\tStyle/DoubleNegation:",
      "\t\tDescription: 'Checks for uses of double negation (!!).'",
      "\t\tEnabled: false",
      "",
      "\tLayout/EmptyLineBetweenDefs:",
      "\t\tEnabled: true",
      "\t\tAllowAdjacentOneLineDefs: true,",
      "",
      "\tStyle/EmptyLiteral:",
      "\t\tDescription: Prefer literals to Array.new/Hash.new/String.new.",
      "\t\tEnabled: false",
      "",
      "\tStyle/FrozenStringLiteralComment:",
      "\t\tEnabled: false",
      "\t\tDescription: Require the addition of the frozen string literal comment.",
      "",
      "\tStyle/GuardClause:",
      "\t\tDescription: Check for conditionals that can be replaced with guard clauses.",
      "\t\tEnabled: true",
      "\t\tMinBodyLength: 1",
      "",
      "\tStyle/HashSyntax:",
      "\t\tDescription: >-",
      "\t\t\t\t\t\t\t\t\t Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax",
      "\t\t\t\t\t\t\t\t\t { :a => 1, :b => 2 }.",
      "\t\tEnabled: true",
      "\t\tEnforcedStyle: ruby19_no_mixed_keys",
      "\t\tUseHashRocketsWithSymbolValues: false",
      "\t\tPreferHashRocketsForNonAlnumEndingSymbols: false",
      "",
      "\tStyle/IfUnlessModifier:",
      "\t\tDescription: >-",
      "\t\t\t\t\t\t\t\t\t Favor modifier if/unless usage when you have a",
      "\t\t\t\t\t\t\t\t\t single-line body.",
      "\t\tEnabled: false",
      "",
      "\tStyle/InlineComment:",
      "\t\tDescription: Avoid inline comments.",
      "\t\tEnabled: false",
      "",
      "\tStyle/MethodCallWithoutArgsParentheses:",
      "\t\tDescription: Do not use parentheses for method calls with no arguments.",
      "\t\tEnabled: false",
      "",
      "\tStyle/ModuleFunction:",
      "\t\tDescription: Checks for usage of `extend self` in modules.",
      "\t\tEnabled: false",
      "",
      "\tStyle/MutableConstant:",
      "\t\tDescription: Freeze mutable constants.",
      "\t\tEnabled: false",
      "",
      "\tStyle/NegatedIf:",
      "\t\tDescription: >-",
      "\t\t\t\t\t\t\t\t\t Favor unless over if for negative conditions",
      "\t\t\t\t\t\t\t\t\t (or control flow or).",
      "\t\tEnabled: false",
      "",
      "\tStyle/NegatedWhile:",
      "\t\tDescription: 'Favor until over while for negative conditions.'",
      "\t\tEnabled: false",
      "",
      "\tStyle/Next:",
      "\t\tDescription: 'Use `next` to skip iteration instead of a condition at the end.'",
      "\t\tEnabled: false",
      "",
      "\tStyle/NumericLiterals:",
      "\t\tDescription: Add underscores to large numeric literals to improve their readability.",
      "\t\tEnabled: false",
      "",
      "\tStyle/NumericPredicate:",
      "\t\tDescription: >-",
      "\t\t\t\t\t\t\t\t\t Checks for the use of predicate- or comparison methods for",
      "\t\t\t\t\t\t\t\t\t numeric comparisons.",
      "\t\tEnabled: false",
      "",
      "\tStyle/OneLineConditional:",
      "\t\tDescription: Favor the ternary operator(?:) over if/then/else/end constructs.",
      "\t\tEnabled: false",
      "",
      "\tNaming/BinaryOperatorParameterName:",
      "\t\tDescription: When defining binary operators, name the argument other.",
      "\t\tEnabled: false",
      "",
      "\tStyle/ParenthesesAroundCondition:",
      "\t\tDescription: >-",
      "\t\t\t\t\t\t\t\t\t Don't use parentheses around the condition of an",
      "\t\t\t\t\t\t\t\t\t if/unless/while.",
      "\t\tEnabled: true",
      "\t\tAllowSafeAssignment: false",
      "",
      "\tStyle/PercentLiteralDelimiters:",
      "\t\tDescription: 'Use `%`-literal delimiters consistently'",
      "\t\tEnabled: true",
      "\t\tPreferredDelimiters:",
      "\t\t\t'%':  ()",
      "\t\t\t'%i': ()",
      "\t\t\t'%I': ()",
      "\t\t\t'%q': ()",
      "\t\t\t'%Q': ()",
      "\t\t\t'%r': ()",
      "\t\t\t'%s': ()",
      "\t\t\t'%w': ()",
      "\t\t\t'%W': ()",
      "\t\t\t'%x': ()",
      "",
      "\tStyle/PerlBackrefs:",
      "\t\tDescription: Avoid Perl-style regex back references.",
      "\t\tEnabled: false",
      "",
      "\tStyle/Proc:",
      "\t\tDescription: Use proc instead of Proc.new.",
      "\t\tEnabled: false",
      "",
      "\tStyle/RedundantFetchBlock:",
      "\t\tDescription: Only way to keep FetchBlock warning from popping up.",
      "\t\tEnabled: true",
      "",
      "\tStyle/RedundantParentheses:",
      "\t\tEnabled: false",
      "",
      "\tStyle/RedundantReturn:",
      "\t\tDescription: \"Don't use return where it's not required.\"",
      "\t\tEnabled: true",
      "\t\t# When true allows code like `return x, y`.",
      "\t\tAllowMultipleReturnValues: true",
      "",
      "\tStyle/RegexpLiteral:",
      "\t\tDescription: 'Use / or %r around regular expressions.'",
      "\t\tEnabled: true",
      "\t\tEnforcedStyle: mixed",
      "\t\tAllowInnerSlashes: false",
      "",
      "\tStyle/SafeNavigation:",
      "\t\tDescription: >-",
      "\t\t\t\t\t\t\t\t\t This cop transforms usages of a method call safeguarded by",
      "\t\t\t\t\t\t\t\t\t a check for the existance of the object to",
      "\t\t\t\t\t\t\t\t\t safe navigation (`&.`).",
      "\t\tEnabled: true",
      "",
      "\tStyle/SingleLineBlockParams:",
      "\t\tDescription: Enforces the names of some block params.",
      "\t\tEnabled: false",
      "",
      "\tStyle/SingleLineMethods:",
      "\t\tDescription: Avoid single-line methods.",
      "\t\tEnabled: false",
      "",
      "\tLayout/SpaceAroundEqualsInParameterDefault:",
      "\t\tEnabled: false",
      "",
      "\tStyle/StringLiterals:",
      "\t\tDescription: Force use of single or double quotes when no interpolation",
      "\t\tEnabled: false",
      "",
      "\tStyle/SymbolArray:",
      "\t\tDescription: 'Use %i or %I for arrays of symbols.'",
      "\t\tStyleGuide: '#percent-i'",
      "\t\tEnabled: false",
      "",
      "\tStyle/WhileUntilModifier:",
      "\t\tDescription: Favor modifier while/until usage when you have a single-line body.",
      "\t\tEnabled: false",
      "",
      "\tStyle/WordArray:",
      "\t\tDescription: 'Use %w or %W for arrays of words.'",
      "\t\tEnabled: false",
      "",
      "\tMetrics/AbcSize:",
      "\t\tDescription: >-",
      "\t\t\t\t\t\t\t\t\t A calculated magnitude based on number of assignments,",
      "\t\t\t\t\t\t\t\t\t branches, and conditions.",
      "\t\tEnabled: true",
      "\t\tMax: 18",
      "",
      "\tMetrics/BlockLength:",
      "\t\tDescription: Limit size of blocks.",
      "\t\tEnabled: true",
      "\t\tMax: 20",
      "",
      "\tMetrics/ClassLength:",
      "\t\tDescription: 'Avoid classes longer than 100 lines of code.'",
      "\t\tEnabled: false",
      "",
      "\tLayout/LineLength:",
      "\t\tDescription: Limit lines to 80 characters.",
      "\t\tEnabled: true",
      "\t\tMax: 80",
      "\t\tStyleGuide: https://rubystyle.guide/#80-character-limits",
      "\t\tAllowURI: true",
      "\t\tURISchemes:",
      "\t\t- http",
      "\t\t- https",
      "",
      "\tMetrics/MethodLength:",
      "\t\tDescription: 'Avoid methods longer than 10 lines of code.'",
      "\t\tEnabled: true",
      "\t\tCountComments: false  # count full line comments?",
      "\t\tMax: 10",
      "",
      "\tLint/LiteralInInterpolation:",
      "\t\tDescription: 'Avoid interpolating literals in strings'",
      "\t\tAutoCorrect: false",
      "\t\tEnabled: true",
      "",
      "\tLayout/EmptyLinesAroundAttributeAccessor:",
      "\t\tDescription: 'Checks for a newline after an attribute accessor or a group of them.'",
      "\t\tEnabled: true",
      "",
      "\tLayout/SpaceAroundMethodCallOperator:",
      "\t\tDescription: 'Checks method call operators to not have spaces around them.'",
      "\t\tEnabled: true",
      "",
      "\tLint/DeprecatedOpenSSLConstant:",
      "\t\tDescription: 'Algorithmic constants for OpenSSL::Cipher and OpenSSL::Digest deprecated since OpenSSL version 2.2.0. Prefer passing a string instead.'",
      "\t\tEnabled: false",
      "",
      "\tLint/MixedRegexpCaptureTypes:",
      "\t\tDescription: 'Do not mix named captures and numbered captures'",
      "\t\tEnabled: false",
      "",
      "\tLint/RaiseException:",
      "\t\tDescription: 'Checks for raise or fail statements which are raising Exception class.'",
      "\t\tEnabled: false",
      "",
      "\tLint/StructNewOverride:",
      "\t\tDescription: 'Checks unexpected overrides of the Struct built-in methods via Struct.new'",
      "\t\tEnabled: false",
      "",
      "\tStyle/ExponentialNotation:",
      "\t\tDescription: 'Enforces consistency when using exponential notation for numbers in the code'",
      "\t\tEnabled: false",
      "",
      "\tStyle/HashTransformKeys:",
      "\t\tDescription: 'Tries to use a simpler & faster call to transform_keys where possible'",
      "\t\tEnabled: false",
      "",
      "\tStyle/HashTransformValues:",
      "\t\tDescription: 'Tries to use a simpler & faster call to transform_values where possible'",
      "\t\tEnabled: false",
      "",
      "\tStyle/RedundantRegexpCharacterClass:",
      "\t\tDescription: 'Checks for unnecessary single-element Regexp character classes.'",
      "\t\tEnabled: false",
      "",
      "\tStyle/RedundantRegexpEscape:",
      "\t\tDescription: 'Checks for redundant escapes inside Regexp literals'",
      "\t\tEnabled: false",
      "",
      "\tStyle/SlicingWithRange:",
      "\t\tDescription: 'Checks that arrays are sliced with endless ranges instead of ary[start..-1]'",
      "\t\tEnabled: false",
      "",
      "\tLayout/EmptyLineAfterGuardClause:",
      "\t\tDescription: 'Requires empty line after guard clause'",
      "\t\tEnabled: false",
      "",
      "\tStyle/FloatDivision:",
      "\t\tDescription: 'Checks for division with integers coerced to floats.'",
      "\t\tEnabled: false",
      "",
      "\tNaming/MethodParameterName:",
      "\t\tDescription: 'Parameter names at least 3 characters long'",
      "\t\tEnabled: false",
      "",
      "\tStyle/ConditionalAssignment:",
      "\t\tDescription: 'Use return value of conditional for assignment'",
      "\t\tEnabled: true",
      "",
      "\tNaming/AccessorMethodName:",
      "\t\tDescription: 'Do not prefix reader method names with get_'",
      "\t\tEnabled: true",
      "",
      "\tStyle/NegatedUnless:",
      "\t\tDescription: 'Favor if over unless'",
      "\t\tEnabled: false",
      "",
      "\tStyle/MultipleComparison:",
      "\t\tDescription: 'Avoid comparing variable with multiple items'",
      "\t\tEnabled: false",
      "",
      "\tLayout/HeredocIndentation:",
      "\t\tDescription: 'Checks the indentation of the here document bodies'",
      "\t\tEnabled: false",
      "",
      "\tLayout/ClosingHeredocIndentation:",
      "\t\tDescription: 'Checks the indentation of here document closings.'",
      "\t\tEnabled: false",
      "",
      "\tStyle/CommentedKeyword:",
      "\t\tDescription: 'Comments should not be on same line as def'",
      "\t\tEnabled: false",
      "",
      "\tStyle/FormatStringToken:",
      "\t\tDescription: 'Prefer annotated tokens over unannotated'",
      "\t\tEnabled: false",
      "",
      "\tStyle/HashEachMethods:",
      "\t\tDescription: 'each_key over keys.each'",
      "\t\tEnabled: false",
      "",
      "\tStyle/MultilineWhenThen:",
      "\t\tDescription: 'Avoid then for multiline when statement'",
      "\t\tEnabled: false",
      "",
      "\tStyle/InverseMethods:",
      "\t\tDescription: 'reject instead of reversed select'",
      "\t\tEnabled: false",
      "",
      "\tStyle/MixinGrouping:",
      "\t\tDescription: 'mixins as separate statements'",
      "\t\tEnabled: false"
    ],
    "description": ".rubocop.yml for non-RB101 courses (17 Mar 2021)"
  }
}
